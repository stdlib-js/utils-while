{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function predicate( i ) {\n*     return ( i < 5 );\n* }\n*\n* function beep( i ) {\n*     console.log( 'beep: %d', i );\n* }\n*\n* whilst( predicate, beep );\n*/\nfunction whilst( predicate, fcn, thisArg ) {\n\tvar i;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( '0m53p', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( '0m52S', fcn ) );\n\t}\n\ti = 0;\n\twhile ( predicate( i ) ) {\n\t\tfcn.call( thisArg, i );\n\t\ti += 1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default whilst;\n"],"names":["whilst","predicate","fcn","thisArg","i","isFunction","TypeError","format","call"],"mappings":";;uLAgDA,SAASA,EAAQC,EAAWC,EAAKC,GAChC,IAAIC,EACJ,IAAMC,EAAYJ,GACjB,MAAM,IAAIK,UAAWC,EAAQ,QAASN,IAEvC,IAAMI,EAAYH,GACjB,MAAM,IAAII,UAAWC,EAAQ,QAASL,IAGvC,IADAE,EAAI,EACIH,EAAWG,IAClBF,EAAIM,KAAML,EAASC,GACnBA,GAAK,CAEP"}